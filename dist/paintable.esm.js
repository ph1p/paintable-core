/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function t(t,i,s,e){return new(s||(s=Promise))((function(h,n){function o(t){try{a(e.next(t))}catch(t){n(t)}}function r(t){try{a(e.throw(t))}catch(t){n(t)}}function a(t){var i;t.done?h(t.value):(i=t.value,i instanceof s?i:new s((function(t){t(i)}))).then(o,r)}a((e=e.apply(t,i||[])).next())}))}class i{constructor(t,i=!0){this.canvas=t,this.name="paintable",this.isMouse=!0,this.currentX=0,this.currentY=0,this.factor=1,this.color="#000000",this.canvasIsEmpty=!1,this.canvasId=Math.round(1e3*Math.random()),this.isColorPickerOpen=!1,this.isLineWidthPickerOpen=!1,this.isEraserActive=!1,this.isActive=!1,this.pointCoords=[],this.redoList=[],this.lineWidth=10,this.threshold=0,this.ctx=null,this.startedDrawing=!1,this.thresholdReached=!1,this.registry=[],this.moveEvent=this.drawMove.bind(this),this.startEvent=this.drawStart.bind(this),this.endEvent=this.drawEnd.bind(this),this.reInit(i)}reInit(t=!0){this.isActive=!1,this.registry=[],this.redoList=[];try{this.pointCoords=[],this.ctx=this.canvas.getContext("2d"),this.load(),t&&this.registerEvents()}catch(t){}}setName(t){this.name=t,this.reInit(!1)}setColor(t){this.color=t}setActive(t){this.isActive=t}setThreshold(t){this.threshold=t}setLineWidth(t){this.lineWidth=t}setLineWidthEraser(t){this.lineWidth=t}setItem(t,i){localStorage.setItem(t,i)}getItem(i){return t(this,void 0,void 0,(function*(){return new Promise(((t,s)=>{const e=localStorage.getItem(i);e?t(JSON.parse(e)):s()}))}))}removeItem(t){localStorage.removeItem(t)}get scalingFactor(){return window.devicePixelRatio||1}get isTouch(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}cancel(){this.load(),this.isActive=!1,this.isColorPickerOpen=!1,this.isLineWidthPickerOpen=!1}registerEvents(){this.canvas.removeEventListener("mousemove",this.moveEvent),this.canvas.removeEventListener("mousedown",this.startEvent),this.canvas.removeEventListener("mouseup",this.endEvent),this.canvas.removeEventListener("touchmove",this.moveEvent),this.canvas.removeEventListener("touchstart",this.startEvent),this.canvas.removeEventListener("touchend",this.endEvent),this.isMouse?(this.canvas.addEventListener("mousemove",this.moveEvent),this.canvas.addEventListener("mousedown",this.startEvent),this.canvas.addEventListener("mouseup",this.endEvent)):(this.canvas.addEventListener("touchmove",this.moveEvent),this.canvas.addEventListener("touchstart",this.startEvent),this.canvas.addEventListener("touchend",this.endEvent))}undo(){this.registry.length>0&&this.isActive&&(this.redoList.push(this.registry[this.registry.length-1]),this.registry.pop(),this.ctx&&(this.ctx.globalCompositeOperation="source-over"),this.drawEntriesFromRegistry())}redo(){this.undoRedoCanvasState(this.redoList,this.registry)}undoRedoCanvasState(t,i){t.length>0&&this.isActive&&(i.push(t[t.length-1]),t.pop(),this.ctx&&(this.ctx.globalCompositeOperation="source-over"),this.drawEntriesFromRegistry())}drawEntriesFromRegistry(){this.clear(),this.registry.forEach((t=>this.drawLine(t)))}clear(){var t;null===(t=this.ctx)||void 0===t||t.clearRect(0,0,this.canvas.width,this.canvas.height)}isCanvasBlank(){this.ctx&&(this.ctx.globalCompositeOperation="source-over");const t=document.createElement("canvas"),i=t.getContext("2d");return null==i||i.clearRect(0,0,this.canvas.width,this.canvas.height),t.width=this.canvas.width,t.height=this.canvas.height,t.toDataURL()===this.canvas.toDataURL()}load(){return t(this,void 0,void 0,(function*(){try{this.clear();const t=yield this.getItem(this.name);this.registry=t.elements||[],this.drawEntriesFromRegistry(),this.canvasIsEmpty=this.isCanvasBlank()}catch(t){}}))}save(){this.isEraserActive=!1,this.isCanvasBlank()?this.removeItem(this.name):this.setItem(this.name,JSON.stringify({width:this.canvas.width,height:this.canvas.height,elements:this.registry})),this.registry=[],this.redoList=[],this.canvasIsEmpty=this.isCanvasBlank()}drawStart(t){if(t.preventDefault(),this.thresholdReached=!1,this.isActive){this.redoList=[],this.drawEntriesFromRegistry(),this.isLineWidthPickerOpen=!1,this.isColorPickerOpen=!1,this.startedDrawing=!0;const i=this.isMouse?t.clientX:t.targetTouches[0].clientX,s=this.isMouse?t.clientY:t.targetTouches[0].clientY;i&&s&&(this.currentX=(i-this.canvas.getBoundingClientRect().left)*this.factor,this.currentY=(s-this.canvas.getBoundingClientRect().top)*this.factor,this.pointCoords.push({x:this.currentX,y:this.currentY})),this.ctx&&(this.ctx.globalCompositeOperation=this.isEraserActive?"destination-out":"source-over")}}drawEnd(){if(this.isActive){const t=this.pointCoords.filter(((t,i)=>0===i||i%4==0||i===this.pointCoords.length-1));this.registry.push({width:this.lineWidth,color:this.color,points:t}),this.drawEntriesFromRegistry(),this.startedDrawing=!1,this.pointCoords=[],this.thresholdReached=!1}}drawLine(t){var i,s,e,h;this.ctx&&(this.ctx.lineCap="round",this.ctx.lineWidth=t.width||this.lineWidth,this.ctx.strokeStyle=t.color||this.color),null===(i=this.ctx)||void 0===i||i.beginPath(),null===(s=this.ctx)||void 0===s||s.moveTo(t.points[0].x,t.points[0].y);for(let i=0;i<t.points.length-1;i++){const s=i>0?t.points[i-1]:t.points[0],h=t.points[i],n=t.points[i+1],o=i!=t.points.length-2?t.points[i+2]:n,r=h.x+(n.x-s.x)/6,a=h.y+(n.y-s.y)/6,c=n.x-(o.x-h.x)/6,d=n.y-(o.y-h.y)/6;null===(e=this.ctx)||void 0===e||e.bezierCurveTo(r,a,c,d,n.x,n.y)}null===(h=this.ctx)||void 0===h||h.stroke()}drawMove(t){if(t.preventDefault(),this.isActive&&this.startedDrawing){const i=this.isMouse?t.clientX:t.targetTouches[0].clientX,s=this.isMouse?t.clientY:t.targetTouches[0].clientY;if(i&&s){if(this.currentX=(i-this.canvas.getBoundingClientRect().left)*this.factor,this.currentY=(s-this.canvas.getBoundingClientRect().top)*this.factor,this.pointCoords.push({x:this.currentX,y:this.currentY}),this.threshold){Math.sqrt(Math.pow(this.pointCoords[this.pointCoords.length-1].y-this.pointCoords[0].y,2)+Math.pow(this.pointCoords[this.pointCoords.length-1].x-this.pointCoords[0].x,2))>this.threshold&&(this.thresholdReached||(this.thresholdReached=!0))}this.drawLine({color:this.color,width:this.lineWidth,points:this.pointCoords})}}}}export{i as Paintable};
