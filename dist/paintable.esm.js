function t(t,s,i,e){return new(i||(i=Promise))((function(h,n){function o(t){try{a(e.next(t))}catch(t){n(t)}}function r(t){try{a(e.throw(t))}catch(t){n(t)}}function a(t){var s;t.done?h(t.value):(s=t.value,s instanceof i?s:new i((function(t){t(s)}))).then(o,r)}a((e=e.apply(t,s||[])).next())}))}class s{constructor(){this.name="paintable",this.color="#000000",this.lineWidth=5,this.threshold=0,this.isMouse=!0,this.currentX=0,this.currentY=0,this.factor=1,this.canvasIsEmpty=!1,this.canvasId=Math.round(1e3*Math.random()),this.isEraserActive=!1,this.isActive=!1,this.canvas=null,this.ctx=null,this.startedDrawing=!1,this.thresholdReached=!1,this.pointCoords=[],this.redoList=[],this.registry=[],this.moveEvent=this.drawMove.bind(this),this.startEvent=this.drawStart.bind(this),this.endEvent=this.drawEnd.bind(this),this.reInit()}reInit(){this.isActive=!1,this.registry=[],this.redoList=[];try{this.pointCoords=[],this.load()}catch(t){}}setCanvas(t,s=!0){this.canvas=t,this.ctx=t.getContext("2d"),s&&this.registerEvents(),this.reInit()}setName(t){this.name=t,this.reInit()}setColor(t){this.color=t,this.ctx&&(this.ctx.strokeStyle=t)}setActive(t){this.isActive=t}setThreshold(t){this.threshold=t}setLineWidth(t){this.lineWidth=t,this.ctx&&(this.ctx.lineWidth=t)}setLineWidthEraser(t){this.lineWidth=t}setItem(t,s){localStorage.setItem(t,s)}getItem(s){return t(this,void 0,void 0,(function*(){return new Promise(((t,i)=>{const e=localStorage.getItem(s);e?t(JSON.parse(e)):i()}))}))}removeItem(t){localStorage.removeItem(t)}get scalingFactor(){return window.devicePixelRatio||1}get isTouch(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}cancel(){this.load(),this.isActive=!1}registerEvents(){this.canvas&&(this.canvas.removeEventListener("mousemove",this.moveEvent),this.canvas.removeEventListener("mousedown",this.startEvent),this.canvas.removeEventListener("mouseup",this.endEvent),this.canvas.removeEventListener("touchmove",this.moveEvent),this.canvas.removeEventListener("touchstart",this.startEvent),this.canvas.removeEventListener("touchend",this.endEvent),this.isMouse?(this.canvas.addEventListener("mousemove",this.moveEvent),this.canvas.addEventListener("mousedown",this.startEvent),this.canvas.addEventListener("mouseup",this.endEvent)):(this.canvas.addEventListener("touchmove",this.moveEvent),this.canvas.addEventListener("touchstart",this.startEvent),this.canvas.addEventListener("touchend",this.endEvent)))}undo(){this.registry.length>0&&this.isActive&&(this.redoList.push(this.registry[this.registry.length-1]),this.registry.pop(),this.ctx&&(this.ctx.globalCompositeOperation="source-over"),this.drawEntriesFromRegistry())}redo(){this.undoRedoCanvasState(this.redoList,this.registry)}undoRedoCanvasState(t,s){t.length>0&&this.isActive&&(s.push(t[t.length-1]),t.pop(),this.ctx&&(this.ctx.globalCompositeOperation="source-over"),this.drawEntriesFromRegistry())}drawEntriesFromRegistry(){this.clearCanvas(),this.registry.forEach((t=>{"line"===t.type?this.drawLine(t):"clear"===t.type&&this.clearCanvas()}))}clearCanvas(){var t;this.canvas&&(null===(t=this.ctx)||void 0===t||t.clearRect(0,0,this.canvas.width,this.canvas.height))}clear(t=!1){this.clearCanvas(),t?(this.registry=[],this.redoList=[]):this.registry.push({type:"clear"})}isCanvasBlank(){this.ctx&&(this.ctx.globalCompositeOperation="source-over");const t=document.createElement("canvas"),s=t.getContext("2d");return!this.canvas||(null==s||s.clearRect(0,0,this.canvas.width,this.canvas.height),t.width=this.canvas.width,t.height=this.canvas.height,t.toDataURL()===this.canvas.toDataURL())}load(){return t(this,void 0,void 0,(function*(){try{this.clearCanvas();const t=yield this.getItem(this.name);this.registry=t.elements||[],this.drawEntriesFromRegistry(),this.canvasIsEmpty=this.isCanvasBlank()}catch(t){}}))}save(){var t,s;this.isEraserActive=!1,this.isCanvasBlank()?this.removeItem(this.name):this.setItem(this.name,JSON.stringify({width:null===(t=this.canvas)||void 0===t?void 0:t.width,height:null===(s=this.canvas)||void 0===s?void 0:s.height,elements:this.registry})),this.redoList=[],this.canvasIsEmpty=this.isCanvasBlank()}drawStart(t){if(t.preventDefault(),this.thresholdReached=!1,this.isActive&&this.canvas){this.drawEntriesFromRegistry(),this.redoList=[],this.startedDrawing=!0;const s=this.isMouse?t.clientX:t.targetTouches[0].clientX,i=this.isMouse?t.clientY:t.targetTouches[0].clientY;s&&i&&(this.currentX=(s-this.canvas.getBoundingClientRect().left)*this.factor,this.currentY=(i-this.canvas.getBoundingClientRect().top)*this.factor,this.pointCoords.push({x:this.currentX,y:this.currentY})),this.ctx&&(this.ctx.globalCompositeOperation=this.isEraserActive?"destination-out":"source-over")}}drawEnd(){if(this.isActive&&this.canvas){const t=this.pointCoords.filter(((t,s)=>0===s||s%4==0||s===this.pointCoords.length-1));this.registry.push({width:this.lineWidth,color:this.color,type:"line",points:t}),this.drawEntriesFromRegistry(),this.startedDrawing=!1,this.pointCoords=[],this.thresholdReached=!1}}drawLine(t){var s,i,e,h;if(t&&this.ctx&&(this.ctx.lineCap="round",this.ctx.lineWidth=t.width||this.lineWidth,this.ctx.strokeStyle=t.color||this.color),t.points&&t.points.length>0){null===(s=this.ctx)||void 0===s||s.beginPath(),null===(i=this.ctx)||void 0===i||i.moveTo(t.points[0].x,t.points[0].y);for(let s=0;s<t.points.length-1;s++){const i=s>0?t.points[s-1]:t.points[0],h=t.points[s],n=t.points[s+1],o=s!=(t.points||[]).length-2?t.points[s+2]:n,r=h.x+(n.x-i.x)/6,a=h.y+(n.y-i.y)/6,c=n.x-(o.x-h.x)/6,v=n.y-(o.y-h.y)/6;null===(e=this.ctx)||void 0===e||e.bezierCurveTo(r,a,c,v,n.x,n.y)}null===(h=this.ctx)||void 0===h||h.stroke()}}drawMove(t){if(t.preventDefault(),this.isActive&&this.startedDrawing&&this.canvas){const s=this.isMouse?t.clientX:t.targetTouches[0].clientX,i=this.isMouse?t.clientY:t.targetTouches[0].clientY;if(s&&i){if(this.currentX=(s-this.canvas.getBoundingClientRect().left)*this.factor,this.currentY=(i-this.canvas.getBoundingClientRect().top)*this.factor,this.pointCoords.push({x:this.currentX,y:this.currentY}),this.threshold){Math.sqrt(Math.pow(this.pointCoords[this.pointCoords.length-1].y-this.pointCoords[0].y,2)+Math.pow(this.pointCoords[this.pointCoords.length-1].x-this.pointCoords[0].x,2))>this.threshold&&(this.thresholdReached||(this.thresholdReached=!0))}this.ctx&&(this.ctx.lineCap="round",this.ctx.lineWidth=this.lineWidth,this.ctx.strokeStyle=this.color),this.drawLine({color:this.color,width:this.lineWidth,points:this.pointCoords})}}}}export{s as Paintable};
